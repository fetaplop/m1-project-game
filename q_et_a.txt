questions:
bind oli epäselvä siinä luentoesimerkissä. se on startLoopissa ja mitä siinä bindataan, mihin ja miksi?

vast: se koko loop() pitää bindata this-elementtiin, joka on nyt tässä tapauksessa se game object. muuten eventListener kuuntelis koko windowia (mitä emme halua). nyt bindaamisen jälkeen this.asia todella viittaa asiaan siinä gamessa

-----------

onko ne x- ja y-arvot nyt niinku pikseleitä??? miks ne on paljaita lukuja???
vast: canvas spesific , is pixels but we're not writing it there

---------------

startGamessa, miks tehään :

    game = new Game();
    game.gameScreen = gameScreen; // question, why we do it like this?

vast: tätä ei ehkä oikeesti tarvis tehä, document.querySelectorilla siellä gamen sisällä vois hoitaa saman.

--------------

this.scoreElement = this.gameScreen.querySelector(".score .value") // why do we not use "let this.scoreElemen.... ?""

tämä yllä on game.js:stä

vast: koska me käytetään class-rakennetta ja määritellään uusia properyjä sille objektille as we go. voitais käyttää const = jotain... jos sitä tarvittais tyyliin vain kerran jossain

-----------------

okei onks tyhmää jos määrittelen jotain siellä arrow-box classissa sillai et se menee flex boxiin???

vast: kinda joo, koska canvas ei tunne sellasta juttua ku flexbox :D eli unoha koko juttu

------------------

mihin se keylistener kannattaa laittaa? täytyy tarkistaa että oikee key press tapahtui oikean arrowin suhteen. (kun se tietty arrow on tietyllä korkeudella)

vast:
------------------

so I guess i hav to draw the hitboxes every time?? would be optimal to update it if u press the corresponding key...
vast:

-------------
so does he execution actually stop when we reach timeOver????



